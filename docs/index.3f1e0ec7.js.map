{"mappings":"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","sources":["src/modules/highscore.js","src/modules/script.js"],"sourcesContent":["// Initialize variable to store ordered list element\r\nlet ol;\r\n// Retrieve and display all highscores from the database\r\nexport async function getAllHighscores() {\r\n\r\n  const firebaseUrl = \"https://highscore-e9287-default-rtdb.europe-west1.firebasedatabase.app/highscore.json\";\r\n  // Fetch data from the Firebase database\r\n  const response = await fetch(firebaseUrl);\r\n  const data = await response.json();\r\n  console.log(data);\r\n\r\n  // Sort the highscores by score in descending order\r\n  const sortedData = Object.values(data).sort((a, b) => b.score - a.score);\r\n\r\n  // Update the highscore list in the HTML document\r\n  const scoreListDiv = document.getElementById(\"score-list\");\r\n\r\n  // Create ordered list element if it doesn't exist\r\n  if (!ol) {\r\n    ol = document.createElement(\"ol\");\r\n    ol.id = \"ol-list\"\r\n    scoreListDiv.append(ol);\r\n  } else {\r\n    // If ordered list already exists, clear its content\r\n    ol.innerHTML = '';\r\n  }\r\n  // Loop through sortedData and append highscore information to ordered list element\r\n  sortedData.forEach((score, index) => {\r\n    const highscoreContainer = document.createElement(\"div\");\r\n    const highscoreRank = document.createElement(\"p\");\r\n    const highscoreUser = document.createElement(\"p\");\r\n    const highscoreScore = document.createElement(\"h3\");\r\n\r\n    highscoreRank.textContent = `#${index + 1}`;\r\n    highscoreUser.textContent = `Name: ${score.name}`;\r\n    highscoreScore.textContent = `Score: ${score.score}`;\r\n\r\n    highscoreContainer.appendChild(highscoreRank);\r\n    highscoreContainer.appendChild(highscoreUser);\r\n    highscoreContainer.appendChild(highscoreScore);\r\n\r\n    ol.appendChild(highscoreContainer); // add highscoreContainer to ol\r\n  });\r\n}\r\n// Add a new highscore to the database and update the list\r\nexport async function addHighscoreToFirebase(userPoints, showPlayerName) {\r\n  const firebaseUrl = \"https://highscore-e9287-default-rtdb.europe-west1.firebasedatabase.app/highscore.json\";\r\n\r\n  // Construct the new highscore object with the player's name and score\r\n  const newHighscore = {\r\n    name: showPlayerName,\r\n    score: userPoints\r\n  };\r\n  // Add the new highscore to the Firebase database\r\n  const response = await fetch(firebaseUrl, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newHighscore),\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n  });\r\n  // Retrieve the unique key of the newly added highscore from the response\r\n  const data = await response.json();\r\n  const key = Object.keys(data)[0];\r\n\r\n  // Retrieve and sort all highscores from the database\r\n  const response2 = await fetch(firebaseUrl);\r\n  const data2 = await response2.json();\r\n  const sortedData = Object.values(data2).sort((a, b) => b.score - a.score);\r\n\r\n  // Update the highscores in the Firebase database with only the top 5\r\n  const updatedData = [];\r\n  for (let i = 0; i < 5; i++) {\r\n    if (sortedData[i]) {\r\n      updatedData.push(sortedData[i]);\r\n    } else {\r\n      updatedData.push({ name: \"\", score: 0 });\r\n    }\r\n  }\r\n  // Update Firebase database with the top 5 highscores\r\n  await fetch(firebaseUrl, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify(updatedData),\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n  });\r\n  // Retrieve the highscores from the Firebase database and display them\r\n  await getAllHighscores();\r\n  return key;\r\n}\r\n\r\n","import { getAllHighscores } from \"./highscore\";\r\nimport { addHighscoreToFirebase } from \"./highscore\";\r\ngetAllHighscores();\r\n\r\nconst playerChoiceH1 = document.getElementById(\"playerchoice\");\r\nconst computer = document.getElementById(\"enemychoice\");\r\nconst showResult = document.getElementById(\"result\");\r\nconst playerPoints = document.getElementById(\"playerscore\");\r\nconst showWinner = document.getElementById(\"winner\");\r\n\r\nlet userPoints = 0;\r\nlet computerChoice;\r\nlet userChoice;\r\nlet showPlayerName;\r\n\r\n// PLAYER NAME\r\nconst submitName = document.getElementById(\"submitname\");\r\nsubmitName.addEventListener(\"click\", event => {\r\n    event.preventDefault();\r\n\r\n    const nameInput = document.getElementById(\"nameinput\");\r\n    const textFromInput = nameInput.value;\r\n    nameInput.value = '';\r\n    showPlayerName = document.getElementById(\"playername\");\r\n    showPlayerName.innerText = textFromInput;\r\n});\r\n\r\n// COMPUTER CHOICE\r\nfunction enemysChoice() {\r\n    const computerHand = ['Rock', 'Paper', 'Scissor'];\r\n    const randomChoice = Math.floor(Math.random() * computerHand.length);\r\n    computer.innerHTML = computerHand[randomChoice]\r\n    computerChoice = computerHand[randomChoice];\r\n}\r\n\r\n// PLAYER CHOICE (ROCK)\r\nconst rockChoice = document.getElementById(\"rock\");\r\nrockChoice.addEventListener(\"click\", rockFunction);\r\n\r\nfunction rockFunction() {\r\n    userChoice = \"Rock\";\r\n    playerChoiceH1.innerHTML = \"Rock\";\r\n    enemysChoice()\r\n    getResult()\r\n}\r\n\r\n//PLAYER CHOICE (PAPER)\r\nconst paperChoice = document.getElementById(\"paper\");\r\npaperChoice.addEventListener(\"click\", paperFunction);\r\n\r\nfunction paperFunction() {\r\n    userChoice = \"Paper\";\r\n    playerChoiceH1.innerHTML = \"Paper\";\r\n    enemysChoice()\r\n    getResult()\r\n}\r\n\r\n// PLAYER CHOICE (SCISSOR)\r\nconst scissorChoice = document.getElementById(\"scissor\");\r\nscissorChoice.addEventListener(\"click\", scissorFunction);\r\n\r\nfunction scissorFunction() {\r\n    userChoice = \"Scissor\";\r\n    playerChoiceH1.innerHTML = \"Scissor\";\r\n    enemysChoice()\r\n    getResult()\r\n}\r\n\r\n// SHOW RESULT\r\nfunction getResult() {\r\n    let computer = computerChoice\r\n    let player = userChoice\r\n    let result;\r\n\r\n    if (player == computer) {\r\n        result = 'Tie!'\r\n        showResult.innerHTML = result\r\n        return;\r\n    }\r\n    if (player === 'Rock' && computer === 'Paper') {\r\n        result = 'Computer wins!'\r\n        showResult.innerHTML = result\r\n        playerPoints.textContent = \"0\";\r\n    }\r\n    if (player === 'Rock' && computer === 'Scissor') {\r\n        result = 'You win!'\r\n        showResult.innerHTML = result\r\n        userPoints++\r\n        playerPoints.textContent = userPoints;\r\n    }\r\n    if (player === 'Paper' && computer === 'Scissor') {\r\n        result = 'Computer wins!'\r\n        showResult.innerHTML = result\r\n        playerPoints.textContent = \"0\";\r\n    }\r\n    if (player === 'Paper' && computer === 'Rock') {\r\n        result = 'You win!'\r\n        showResult.innerHTML = result\r\n        userPoints++\r\n        playerPoints.textContent = userPoints;\r\n    }\r\n    if (player == 'Scissor' && computer == 'Rock') {\r\n        result = 'Computer wins!'\r\n        showResult.innerHTML = result\r\n        playerPoints.textContent = \"0\";\r\n    }\r\n    if (player == 'Scissor' && computer == 'Paper') {\r\n        result = 'You win!'\r\n        showResult.innerHTML = result\r\n        userPoints++\r\n        playerPoints.textContent = userPoints;\r\n    }\r\n\r\n    else if (result == 'Computer wins!') {\r\n        showWinner.innerHTML = \"You lost the game!\"\r\n        addHighscoreToFirebase(userPoints, showPlayerName.innerText);\r\n        endGame()\r\n    }\r\n\r\n    // RESTART GAME\r\n    function endGame() {\r\n        userPoints = 0;\r\n        playerPoints.innerHTML = userPoints;\r\n        result.innerHTML = ``;\r\n        showWinner.innerHTML = ``;\r\n        playerChoiceH1.innerHTML = player;\r\n        computer.innerHTML = ``;\r\n        showResult.innerHTML = result;\r\n    }\r\n}\r\n"],"names":["$1dbe79ed6ae4da18$var$ol","async","$1dbe79ed6ae4da18$export$355d937d0db87cc1","response","fetch","data","json","console","log","sortedData","Object","values","sort","a","b","score","scoreListDiv","document","getElementById","innerHTML","createElement","id","append","forEach","index","highscoreContainer","highscoreRank","highscoreUser","highscoreScore","textContent","name","appendChild","$1dbe79ed6ae4da18$export$20c07601830f7075","userPoints","showPlayerName","firebaseUrl","newHighscore","method","body","JSON","stringify","headers","key","keys","response2","data2","updatedData","i","push","$47ea1403c1ec333d$var$playerChoiceH1","$47ea1403c1ec333d$var$computer","$47ea1403c1ec333d$var$showResult","$47ea1403c1ec333d$var$playerPoints","$47ea1403c1ec333d$var$showWinner","$47ea1403c1ec333d$var$computerChoice","$47ea1403c1ec333d$var$userChoice","$47ea1403c1ec333d$var$showPlayerName","$47ea1403c1ec333d$var$userPoints","$47ea1403c1ec333d$var$enemysChoice","computerHand","randomChoice","Math","floor","random","length","addEventListener","event","preventDefault","nameInput","textFromInput","value","innerText","$47ea1403c1ec333d$var$getResult","result","computer","player"],"version":3,"file":"index.3f1e0ec7.js.map"}